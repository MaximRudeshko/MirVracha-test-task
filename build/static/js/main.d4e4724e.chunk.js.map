{"version":3,"sources":["components/ErrorIndicator/not-found.svg","services/apiService.js","components/ContentRow/index.js","components/ContentRow/ContentRow.js","components/Loader/index.js","components/Loader/Loader.js","components/UserDetails/UserDetails.js","components/UserDetails/index.js","components/Table/index.js","components/Table/Table.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/ErrorBoundry/index.js","components/ErrorBoundry/ErrorBoundry.js","components/UsersList/index.js","components/UsersList/UsersList.js","components/Filter/index.js","components/Filter/Filter.js","components/AddUser/index.js","components/AddUser/AddUser.js","components/AddModal/AddModal.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","ApiService","_apiBase","getResources","url","a","fetch","res","ok","Error","status","json","getAllUsers","ContentRow","left","right","className","Loader","Record","item","label","field","UserDetails","state","prevProps","this","props","selectedRow","setState","console","log","firstName","description","React","Children","map","children","child","cloneElement","Component","Table","data","onSort","sortType","sortField","onRowSelect","arrow","width","onClick","row","key","id","Math","random","lastName","email","phone","ErrorIndicator","alt","src","img","ErrorBoundry","hasError","UsersList","currentPage","search","onPageChange","loading","view","pageSize","pageCount","length","previousLabel","nextLabel","pageRangeDisplayed","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","initialPage","forcePage","disabledClassName","FilterPanel","onSearch","type","placeholder","onChange","e","target","value","AddUser","openModal","AddModal","isModalOpen","closeModal","addItem","useState","setId","setFirstName","setLastName","setEmail","setPhone","onSubmit","preventDefault","reset","aria-hidden","htmlFor","disabled","Users","setRow","setSearch","setCurrentPage","visibleModal","setVisibleModal","setData","setLoading","setSortType","setSortField","useEffect","then","_","orderBy","catch","filteredData","filter","toLowerCase","includes","ceil","chunk","toggleModal","userDetails","usersList","selected","cloneData","concat","sortDirection","orderedData","filterPanel","str","addUser","newArr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4e4724e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found.9d219696.svg\";","export default class ApiService {\r\n\r\n    _apiBase = 'http://www.filltexst.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\r\n\r\n    getResources = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if(!res.ok){\r\n            throw new Error(`Could not fetch ${res.status}`)\r\n        }\r\n\r\n        return await res.json()\r\n    } \r\n\r\n    getAllUsers = async () => {\r\n        return await this.getResources(this._apiBase)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import ContentRow from './ContentRow'\r\n\r\nexport default ContentRow","import React from 'react'\r\n\r\nconst ContentRow = ({left, right}) => {\r\n    return(\r\n        <div className = 'row pl-3 pr-3 mt-3 justify-content-between'>\r\n            {left}\r\n            {right}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentRow","import Loader from './Loader'\r\n\r\nexport default Loader","import React from 'react'\r\nimport './loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className = 'loader__wrapper'>\r\n            <div className=\"loadingio-spinner-double-ring-2jlpbh0b9wr\"><div className=\"ldio-2qog2ov4njb\">\r\n            <div></div>\r\n            <div></div>\r\n            <div><div></div></div>\r\n            <div><div></div></div>\r\n            </div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { Component } from 'react'\r\nimport Loader from '../Loader'\r\n\r\n\r\nimport './UserDetails.scss'\r\n\r\nexport const Record = ({item, label, field}) => {\r\n    return(\r\n        <li className=\"list-group-item\">\r\n            <span>{label}</span>\r\n            <span>{item[field]}</span>\r\n        </li>\r\n    )\r\n}\r\nexport default class UserDetails extends Component{\r\n\r\n    state = {\r\n        item: null\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.selectedRow !== prevProps.selectedRow){\r\n            this.setState({\r\n                item: this.props.selectedRow\r\n            })\r\n        }\r\n    } \r\n    \r\n\r\n    render(){\r\n        console.log(this.props.selectedRow)\r\n        const {item} = this.state\r\n        if(!this.state.item){\r\n            return (\r\n                <div className = 'card p-5'>\r\n                    <h2>Select user</h2>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.props.selectedRow.firstName}</h5>\r\n                    <p className=\"card-text\">{item.description ? item.description : 'There is no description for this user'}</p>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                {\r\n                   React.Children.map(this.props.children, child => {\r\n                       return React.cloneElement(child, {item})\r\n                   })\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* \r\n}\r\n\r\n\r\nconst UserDetails = ({selectedRow, children}) => {\r\n\r\n    if(!selectedRow){\r\n        return (\r\n            <div className = 'card'>\r\n                <h1>Hello, please choose a user</h1>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" src=\"#\" alt=\"Card  cap\"/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{selectedRow.firstName}</h5>\r\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n               {\r\n                   React.Children.map(children, () => {\r\n                       return React.cloneElement(children , selectedRow)\r\n                   })\r\n               }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetails */","import UserDetails from './UserDetails'\r\n\r\nexport default UserDetails","import Table from './Table'\r\n\r\nexport default Table","import React from 'react'\r\nimport './Table.scss'\r\n\r\nconst Table = ({data, onSort, sortType, sortField, onRowSelect}) => {\r\n    \r\n    const arrow = <i className={`fa fa-arrow-up ${sortType === 'desc' ? 'active' : ''} ml-1`}></i>\r\n\r\n    return(\r\n        <table className=\"table-bordered table table-hover\">\r\n            <thead className = 'bg-primary'>\r\n                <tr>\r\n                <th width = '10%' onClick = {() => onSort('id')}>ID {sortField === 'id' ? arrow : null}</th>\r\n                <th width = '18%' onClick = {() => onSort('firstName')}>First Name {sortField === 'firstName' ? arrow : null}</th>\r\n                <th width = '18%' onClick = {() => onSort('lastName')}>Last Name {sortField === 'lastName' ? arrow : null}</th>\r\n                <th width = '35%' onClick = {() => onSort('email')}>Email {sortField === 'email' ? arrow : null}</th>\r\n                <th width = '20%' onClick = {() => onSort('phone')}>Phone {sortField === 'phone' ? arrow : null}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {data ? data.map( row => {\r\n                    return (\r\n                        <tr key = {row.id + Math.random()*1000} onClick = {() => onRowSelect(row)} >\r\n                            <th>{row.id}</th>\r\n                            <th>{row.firstName}</th>\r\n                            <th>{row.lastName}</th>\r\n                            <th>{row.email}</th>\r\n                            <th>{row.phone}</th>\r\n                        </tr>\r\n                    )\r\n                }) : null }\r\n            </tbody>\r\n        </table>\r\n    \r\n    ) \r\n}\r\n\r\nexport default Table","import ErrorIndicator from './ErrorIndicator'\r\n\r\nexport default ErrorIndicator","import React from 'react'\r\nimport img from './not-found.svg'\r\nimport './ErrorIndicator.scss'\r\n\r\nconst ErrorIndicator = () => {\r\n\r\n    return(\r\n        <div className = 'jumbotron dark characters-list list'>\r\n            <div className = 'error'>\r\n                <img className = 'error-smile' alt = 'spinner' src = {img}/>\r\n                <h2 className = 'mt-2'>Not Found</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator","import ErrorBoundry from './ErrorBoundry'\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react'\r\nimport ErrorIndicator from '../ErrorIndicator'\r\n\r\nexport default class ErrorBoundry extends Component{\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({\r\n            hasError:true\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const {hasError} = this.state\r\n\r\n        if(hasError){\r\n            return <ErrorIndicator/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}","import UsersList from './UsersList'\r\n\r\nexport default UsersList","import React, { useState, useEffect, Component } from 'react';\r\nimport _ from 'lodash'\r\nimport ReactPaginate from 'react-paginate';\r\nimport ApiService from '../../services/apiService';\r\nimport Loader from '../Loader';\r\nimport Table  from '../Table';\r\nimport ErrorBoundry from '../ErrorBoundry';\r\n\r\nimport './UsersList.scss'\r\n\r\n\r\n\r\n\r\nconst UsersList = ({onRowSelect, search, currentPage, onPageChange, loading, view, onSort, sortType, sortField, data, pageSize, pageCount}) => {\r\n       \r\n\r\n  return(\r\n    <div className = 'users-list'>\r\n\r\n      {loading ? \r\n        <Loader/> :\r\n        <ErrorBoundry>\r\n          \r\n            {!view ? \r\n              <h2>Items is not defined</h2>\r\n              :<Table \r\n                data = {view}\r\n                onSort = {onSort}\r\n                sortType = {sortType}\r\n                sortField = {sortField}\r\n                onRowSelect = {onRowSelect}\r\n              />  \r\n            }\r\n            {data.length > pageSize && pageCount > 1 \r\n              ? <ReactPaginate\r\n                  previousLabel={'previous'}\r\n                  nextLabel={'next'}\r\n                  pageCount={pageCount}\r\n                  pageRangeDisplayed={pageCount}\r\n                  onPageChange={onPageChange}\r\n                  containerClassName={'pagination justify-content-center'}\r\n                  activeClassName={'active'}\r\n                  pageClassName={'page-item'}\r\n                  pageLinkClassName={'page-link'}\r\n                  previousClassName={'page-link'}\r\n                  nextClassName={'page-link'}\r\n                  initialPage = {currentPage}\r\n                  forcePage = {currentPage}\r\n                  disabledClassName = {'disabled'}\r\n                /> : null\r\n              }\r\n        </ErrorBoundry>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n\r\n\r\n/* export default class UsersList extends Component{\r\n\r\n  state = {\r\n    data: null,\r\n    loading:false,\r\n    currentPage: 0,\r\n    rowsPerPage: 7,\r\n    sortType: 'asc',\r\n    sortField: 'id',\r\n    error: false\r\n  }\r\n\r\n  apiService = new ApiService()\r\n\r\n\r\n  componentDidMount(){\r\n    this.setState({loading:true})\r\n    this.apiService.getAllUsers()\r\n      .then(data => {\r\n        this.setState({\r\n          data,\r\n          loading:false\r\n        })\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          error:true,\r\n          loading:false\r\n        })\r\n      })\r\n  }\r\n\r\n  onPageChange = ({selected}) => {\r\n    setCurrentPage(selected + 1)\r\n  }\r\n\r\n  onSort = sortField => {\r\n    const cloneData = data.concat();\r\n    const sortDirection = sortType === 'asc' ? 'desc' : 'asc';\r\n\r\n    const orderedData = _.orderBy(cloneData, sortField, sortDirection);\r\n\r\n    setData(orderedData);\r\n    setSortType(sortDirection);\r\n    setSortField(sortField)\r\n  }\r\n\r\n  onFilter = () => {\r\n  \r\n    if(!search){\r\n      return data\r\n    }\r\n\r\n    return data.filter(item => {\r\n      return item['firstName'].toLowerCase().includes(search.toLowerCase())\r\n            || item['lastName'].toLowerCase().includes(search.toLowerCase())\r\n            || item['email'].toLowerCase().includes(search.toLowerCase())\r\n            || item['phone'].toLowerCase().includes(search.toLowerCase())\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    const {data, loading, currentPage, error, rowsPerPage, sortField, sortType}\r\n\r\n\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n} */\r\n","import FilterPanel from './Filter'\r\n\r\nexport default FilterPanel;","import React, {useState} from 'react'\r\nimport './Filter.scss'\r\n\r\nconst FilterPanel = ({onSearch}) => {   \r\n\r\n    return(\r\n        <div className = 'input-group__wrapper mr-2 d-flex'>\r\n            <div className='input-group mb-3 mt-3 '>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control bg-dark search-input\" \r\n                    placeholder=\"Search\" \r\n                    onChange = { e => onSearch(e.target.value)}    \r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterPanel","import AddUser from './AddUser'\r\n\r\n\r\nexport default AddUser","import React from 'react'\r\n\r\n\r\nconst AddUser = ({openModal}) => {\r\n\r\n\r\n    return(\r\n        <button onClick = {() => openModal()} className = 'add-btn btn btn-success mt-3 mb-3'>Add User</button>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, {useState} from 'react'\r\n\r\nimport './AddModal.scss'\r\n\r\nconst AddModal = ({isModalOpen, closeModal, addItem}) => {\r\n\r\n    const [id, setId] = useState(null)\r\n    const [firstName, setFirstName] = useState(null)\r\n    const [lastName, setLastName] = useState(null)\r\n    const [email, setEmail] = useState(null)\r\n    const [phone, setPhone] = useState(null)\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        addItem({\r\n            id,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            phone\r\n        })\r\n\r\n        e.target.reset()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {`add-modal ${!isModalOpen ? 'hide' : ''}`}>\r\n            <form onSubmit = {onSubmit} className='bg-success'>\r\n                <i className=\"fa fa-times-circle-o\" aria-hidden=\"true\" onClick = {() => closeModal()}   ></i>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col\">\r\n                        <label htmlFor=\"inputId\">ID<span>*</span></label>\r\n                        <input onChange = {(e) => setId(e.target.value)} type=\"number\" className=\"form-control\" id=\"inputId\" placeholder=\"ID\"/>\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                        <label htmlFor=\"inputFirstName\">First Name<span>*</span></label>\r\n                        <input onChange = {(e) => setFirstName(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputFirstName\" placeholder=\"First Name\"/>\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                        <label htmlFor=\"inputLastName\">last Name<span>*</span></label>\r\n                        <input onChange = {(e) => setLastName(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputLastName\" placeholder=\"Last Name\"/>\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                        <label htmlFor=\"inputEmail\">Email<span>*</span></label>\r\n                        <input onChange = {(e) => setEmail(e.target.value)} type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\"/>\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                        <label htmlFor=\"inputPassword4\">Phone<span>*</span></label>\r\n                        <input onChange = {(e) => setPhone(e.target.value)} type=\"phone\" className=\"form-control\" id=\"inputPhone\" placeholder=\"Phone\"/>\r\n                    </div>\r\n                </div>\r\n                <button className = 'btn btn-primary '\r\n                        type = 'submit'\r\n                        disabled = {id && firstName && lastName && email && phone != null ? false : true }\r\n                >Add User</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddModal","import Users from './App'\r\n\r\nexport default Users","import React, {useState,useEffect} from 'react'\r\nimport _ from 'lodash'\r\nimport ApiService from '../../services/apiService'\r\n\r\nimport ContentRow from '../ContentRow'\r\nimport UserDetails from '../UserDetails'\r\nimport UsersList from '../UsersList'\r\nimport {Record} from '../UserDetails/UserDetails'\r\nimport FilterPanel from '../Filter'\r\nimport AddUser from '../AddUser'\r\nimport AddModal from '../AddModal/AddModal'\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    const {getAllUsers} = new ApiService(),\r\n          [row, setRow] = useState(null),\r\n          [search, setSearch] = useState(''),\r\n          [currentPage, setCurrentPage] = useState(0),\r\n          [visibleModal, setVisibleModal] = useState(false),\r\n          [data, setData] = useState([]),\r\n          [loading, setLoading] = useState(false),\r\n          [pageSize] = useState(7),\r\n          [sortType, setSortType] = useState('asc'),\r\n          [sortField, setSortField] = useState('id');\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getAllUsers()\r\n      .then(data => {\r\n        setData(_.orderBy(data, sortField, sortType))\r\n        setLoading(false)\r\n    })\r\n      .catch(() => {\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n\r\n  const addItem = (item) => {\r\n\r\n    const newArr = [item, ...data]\r\n\r\n    setData(newArr)\r\n\r\n    toggleModal()\r\n  }\r\n\r\n\r\n\r\n  const onSort = sortField => {\r\n    const cloneData = data.concat();\r\n    const sortDirection = sortType === 'asc' ? 'desc' : 'asc';\r\n\r\n    const orderedData = _.orderBy(cloneData, sortField, sortDirection);\r\n\r\n    setData(orderedData);\r\n    setSortType(sortDirection);\r\n    setSortField(sortField)\r\n  }\r\n\r\n  const onFilter = () => {\r\n    \r\n    if(!search){\r\n      return data\r\n    }\r\n    return data.filter(item => {\r\n      return item['firstName'].toLowerCase().includes(search.toLowerCase())\r\n            || item['lastName'].toLowerCase().includes(search.toLowerCase())\r\n            || item['email'].toLowerCase().includes(search.toLowerCase())\r\n            || item['phone'].toLowerCase().includes(search.toLowerCase())\r\n    })\r\n  }\r\n\r\n  const filteredData = onFilter()\r\n  \r\n  const pageCount = Math.ceil(filteredData.length / pageSize),   \r\n        view = _.chunk(filteredData, pageSize)[currentPage]\r\n\r\n    \r\n\r\n    const onRowSelect = row => {\r\n        setRow(row)\r\n    }\r\n\r\n    const onSearch = str => {\r\n        setSearch(str)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    const onPageChange = ({selected}) => {\r\n        setCurrentPage(selected)\r\n    }\r\n\r\n    const toggleModal = () => {\r\n        setVisibleModal(!visibleModal)\r\n        console.log('click')\r\n    }\r\n\r\n\r\n\r\n\r\n    const userDetails = (\r\n        <UserDetails selectedRow = {row}>\r\n            <Record label = 'First name: ' field = 'firstName'/>\r\n            <Record label = 'Last name: ' field = 'lastName'/>\r\n            <Record label = 'Email: ' field = 'email'/>\r\n            <Record label = 'Phone: ' field = 'phone'/>\r\n        </UserDetails>\r\n    )\r\n\r\n    const usersList = (\r\n        <UsersList\r\n            search = {search}\r\n            onRowSelect = {onRowSelect}\r\n            onPageChange = {onPageChange}\r\n            currentPage = {currentPage}\r\n            loading = {loading}\r\n            view = {view}\r\n            onSort = {onSort}\r\n            sortType = {sortType}\r\n            sortField = {sortField}\r\n            data = {data}\r\n            pageSize = {pageSize}\r\n            pageCount = {pageCount}\r\n        />\r\n    )\r\n\r\n    const filterPanel = (\r\n        <FilterPanel\r\n                onSearch = {onSearch}\r\n            />\r\n    )\r\n\r\n    const addUser = (\r\n        <AddUser openModal = {toggleModal}/>\r\n    )\r\n\r\n    return (\r\n        <div className = 'container'>\r\n            <ContentRow\r\n                left = {filterPanel}\r\n                right = {addUser}\r\n            />\r\n            <ContentRow \r\n                left = {usersList} \r\n                right = {userDetails} \r\n            />\r\n            <AddModal closeModal = {toggleModal} isModalOpen = {visibleModal} addItem = {addItem}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}